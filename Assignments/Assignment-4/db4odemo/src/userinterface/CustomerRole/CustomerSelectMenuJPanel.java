/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.CustomerRole;

import Business.Customer.Customer;
import Business.Customer.CustomerDirectory;
import Business.DeliveryMan.DeliveryMan;
import Business.DeliveryMan.DeliveryManDirectory;
import Business.EcoSystem;
import Business.Menu.Item;
import Business.Order.Order;
import Business.Order.OrderDirectory;
import Business.Order.OrderStatus;
import Business.Restaurant.Restaurant;
import Business.UserAccount.UserAccount;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shiva
 */
public class CustomerSelectMenuJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerSelectMenuJPanel
     */
    public JPanel panel;
    public EcoSystem system;
    public Restaurant currentRestaurant;
    public OrderDirectory orderDirectory;
    public UserAccount userAccount;
    public CustomerDirectory customerDirectory;
    public DeliveryManDirectory deliveryManDirectory;
    public Customer curCustomer;
    public CustomerSelectMenuJPanel(JPanel container, UserAccount account, EcoSystem system, Restaurant current, OrderDirectory orderDirectory, CustomerDirectory customerDirectory, DeliveryManDirectory deliveryManDirectory, Customer currentCustomer) {
        initComponents();
        this.panel = container;
        this.system = system;
        this.currentRestaurant = current;
        this.orderDirectory = orderDirectory;
        this.userAccount = account;
        this.deliveryManDirectory = deliveryManDirectory;
        this.customerDirectory = customerDirectory;
        this.curCustomer = currentCustomer;
        this.populateMenu();
    }
    
    public void populateMenu() {
        DefaultTableModel model = (DefaultTableModel) tblMenu.getModel();
        model.setRowCount(0);
        for (Item item : this.currentRestaurant.getMenu().getItemList()) {
                Object[] row = new Object[4];
                row[0] = item.getItemId();
                row[1] = item.getItemName();
                row[2] = item.getPrice();
                model.addRow(row);
            
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblMenu = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        BackButton = new javax.swing.JButton();
        btnPlaceOrder = new javax.swing.JButton();
        boxQuantityCount = new javax.swing.JComboBox();
        lblQuantity = new javax.swing.JLabel();

        setBackground(new java.awt.Color(102, 255, 204));

        tblMenu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Item Id", "Item name", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblMenu);
        if (tblMenu.getColumnModel().getColumnCount() > 0) {
            tblMenu.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel1.setFont(new java.awt.Font("Monotype Corsiva", 1, 24)); // NOI18N
        jLabel1.setText("Select an item from the Menu");

        BackButton.setText("Back");
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        btnPlaceOrder.setText("Place Order");
        btnPlaceOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlaceOrderActionPerformed(evt);
            }
        });

        boxQuantityCount.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50" }));
        boxQuantityCount.setToolTipText("");

        lblQuantity.setText("Quantity:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(195, 195, 195)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(291, 291, 291)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addComponent(BackButton)
                        .addGap(120, 120, 120)
                        .addComponent(btnPlaceOrder)
                        .addGap(57, 57, 57)
                        .addComponent(lblQuantity)
                        .addGap(26, 26, 26)
                        .addComponent(boxQuantityCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(291, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BackButton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnPlaceOrder)
                        .addComponent(lblQuantity)
                        .addComponent(boxQuantityCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(133, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        // TODO add your handling code here:
        panel.remove(this);
        Component[] componentArray = panel.getComponents();
        Component component = componentArray[componentArray.length - 1];
        CustomerAreaJPanel custareaPanel = (CustomerAreaJPanel)component;
        custareaPanel.populateOrderTable();
        custareaPanel.populateRequestTable();
        CardLayout layout = (CardLayout) panel.getLayout();
        layout.previous(panel);
                                          
    }//GEN-LAST:event_BackButtonActionPerformed

    public DeliveryMan findDeliveryMan(){
        
        DeliveryMan idleMan = null;
        
        for(DeliveryMan del: this.deliveryManDirectory.DeliveryManList){
            if(del.IsAssigned == false){
                idleMan = del;
                break;
            }
        }
        return idleMan;
    }
    
    private void btnPlaceOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlaceOrderActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblMenu.getSelectedRow();
        int count = tblMenu.getSelectedRowCount();
        if (count == 1) {
            int quantity = Integer.parseInt(boxQuantityCount.getSelectedItem().toString());
            Restaurant restaurant = this.currentRestaurant;
            Customer customer = this.curCustomer;
            DefaultTableModel records = (DefaultTableModel)tblMenu.getModel();
            int itemid = (Integer)records.getValueAt(selectedRow, 0);
            Item item = restaurant.getMenu().getItem(itemid);
            OrderStatus.Status status = OrderStatus.Status.Active;
            DeliveryMan deliveryPerson = deliveryManDirectory.DeliveryManList.get(0);
            
            Order order = new Order(curCustomer,currentRestaurant,deliveryPerson,item,quantity);
            order.setOrderId(orderDirectory.Orders.size()+1);
            orderDirectory.Orders.add(order);
            order.setStatus(status);
            deliveryPerson.setIsAssigned(true);
            
            deliveryPerson.OrderHistory.add(order);
            curCustomer.OrderHistory.add(order);
            
            system.setOrderDirectory(orderDirectory);

            JOptionPane.showMessageDialog(null, "Your Order has been sucessfully placed!");
            
        } else {
            JOptionPane.showMessageDialog(null, "Please select one row!");
        }
    }//GEN-LAST:event_btnPlaceOrderActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JComboBox boxQuantityCount;
    private javax.swing.JButton btnPlaceOrder;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JTable tblMenu;
    // End of variables declaration//GEN-END:variables
}
